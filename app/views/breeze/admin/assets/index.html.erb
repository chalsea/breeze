<% content_for :title, "Assets" %>

<% content_for :head do %>
  <%= stylesheet_link_tag "/breeze/javascripts/jcrop/css/jquery.Jcrop.css", "/breeze/javascripts/uploadify/uploadify.css" %>
  <%= javascript_include_tag "/breeze/javascripts/assets", "/breeze/javascripts/jcrop/js/jquery.Jcrop.min.js", "/breeze/javascripts/uploadify/swfobject.js", "/breeze/javascripts/uploadify/uploadify.js" %>
<% end %>

<%= pane_layout do |main| %>
  <% main.header do %>
  
  <% end %>
  <% main.inner do %>
    <%= scrollable_layout :id => :assets do %>
      <h1>Files in <tt><%= File.join("/assets", @folder || "/").sub(/\/$/, "") %></tt></h1>
      <%= render :partial => "assets", :locals => { :assets => @assets, :folder => @folder } %>
    <% end %>
  <% end %>
<% end %>

<% content_for :left do %>
  <%= pane_layout do |left| %>
    <% left.header do %>
      <h2>Assets</h2>
    <% end %>
    <% left.inner do %>
      <%= content_tag :div, :id => :folders do %>
        <%= content_tag :ul, :class => "folders" do %>
          <%= render :partial => "folder", :object => "/" %>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
<% end %>

<% content_for :right do %>
  <%= pane_layout do |right| %>
    <% right.inner do %>
      <%= render :partial => "upload" %>
    <% end %>
  <% end %>
<% end -%>

<script type="text/javascript" charset="utf-8">
  $(function() {
    $('#right #uploader').each(function() {
      script_data = {};
      script_data[$('meta[name=csrf-param]').attr('content')] = $('meta[name=csrf-token]').attr('content');
      script_data[$(this).attr('data-session-key')] = $(this).attr('data-session-id');
      $(this).uploadify({
        uploader:     '/breeze/javascripts/uploadify/uploadify.swf',
        cancelImg:    '/breeze/images/icons/delete.png',
        buttonImg:    '/breeze/images/buttons/upload.png',
        width:        215,
        height:       40,
        multi:        true,
        auto:         true,
        script:       '/admin/assets.html',
        scriptData:   script_data,
        fileDataName: 'file',
        wmode:        'transparent',
        folder:       '<%= @folder || "/" %>',
        
        onComplete: function(event, queue_id, file_obj, response, data) {
          var id = /id="([^"]+)"/.exec(response);
          if (id && id[1]) {
            $('#' + id[1]).remove();
          }
          
          var match = /class="(\w+) asset/.exec(response);
          var group = match ? match[1] : 'asset';
          $('#assets .' + group + '-assets').prepend(response);
          show_or_hide_asset_section_headings();
          return true;
        }
      });
    });
    
    show_or_hide_asset_section_headings();
    $('#left #folders').tree({
      ui: {
        theme_path: '/breeze/javascripts/jstree/themes/breeze/style.css',
        theme_name: 'breeze',
        dots: false,
        selected_delete: false
      },
      plugins: {
        contextmenu: {
          items: {
            rename : {
  						visible	: function (NODE, TREE_OBJ) { if(NODE.length != 1) return false; return TREE_OBJ.check("renameable", NODE) && $(NODE).attr('rel') != 'root'; },
  					}
  				}
        }
      },
      types: {
        'default': {
          'delete': true,
          'deletable': true,
          'rename': true,
          'renameable': true,
          'create': true
        },
        'root': {
          'delete': false,
          'deletable': false,
          'rename': false,
          'start_drag': false,
          'move_node': false
        },
        'folder': {
        }
      },
      rules: {
        multiple: false,
        drag_copy: false
      },
      callback: {
        onselect: function(node, tree) {
          a = $(node).children('a');
          url = $(a).attr('href');
          if (url != '') {
            folder = $(node).attr('data-folder');
            $('#right #uploader').uploadifySettings('folder', folder);
            $('#assets')
              .fadeTo('normal', 0.5)
              .load('/admin/assets/folders/' + folder.replace(/\//g, '%2f'), function() {
                show_or_hide_asset_section_headings();
                $(this).fadeTo('normal', 1.0);
              });
          }
        },
        onmove: function(node, ref, type, tree, rollback) {
          // TODO: implement!
          $.flashMessage('Sorry, dragging and dropping of files and folders is not implemented yet.', { auto: false });
          $.tree.rollback(rollback);
        },
        ondelete: function(node, tree, rollback) {
          $('#assets').fadeOut(function() { $(this).html('').fadeIn(); });
          $.ajax({
            url: $('>a', node).attr('href'),
            type: 'post',
            data: '_method=delete'
          });
        },
        onrename: function(node, tree) {
          var a = $('>a', node), name = get_folder_name(node);
          var parent_node = $(node).parent().closest('li');
          var parent_folder = parent_node.attr('data-folder');
          var parent_href = $('>a', parent_node).attr('data-folder');
          var new_path = parent_folder == '/' ? '/' + name : parent_folder + '/' + name;
          if (a.attr('href') != '') {
            $.ajax({
              url: a.attr('href'),
              data: '_method=put&folder[name]=' + name,
              type: 'post',
              success: function() {
                $(node).attr('data-folder', new_path).attr('rel', 'folder')
                  .find('>a').attr('href', '/admin/assets/folders/' + new_path.replace(/\//g, '%2f')).click();
                $('#right #uploader').uploadifySettings('folder', new_path);
              }
            });
          } else {
            // New folder
            $.ajax({
              url:'/admin/assets/folders',
              type:'post',
              data:'parent_folder=' + parent_folder + '&folder_name=' + name,
              success: function() {
                $(node).attr('data-folder', new_path).attr('rel', 'folder')
                  .find('>a').attr('href', '/admin/assets/folders/' + new_path.replace(/\//g, '%2f')).click();
                $('#right #uploader').uploadifySettings('folder', new_path);
              }
            });
          }
        }
      }
    });
  });
  
  function get_folder_name(node) {
    return $('a', node).contents().filter(function() { return this.nodeType == 3; }).eq(0).text();
  }
</script>